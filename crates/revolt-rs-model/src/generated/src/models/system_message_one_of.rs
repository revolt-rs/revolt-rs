/*
 * Revolt API
 *
 * Open source user-first chat platform.
 *
 * The version of the OpenAPI document: 0.6.1
 * Contact: contact@revolt.chat
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SystemMessageOneOf {
    #[serde(rename = "type")]
    pub r#type: RHashType,
    #[serde(rename = "content")]
    pub content: String,
}

impl SystemMessageOneOf {
    pub fn new(r#type: RHashType, content: String) -> SystemMessageOneOf {
        SystemMessageOneOf {
            r#type,
            content,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "text")]
    Text,
    #[serde(rename = "user_added")]
    UserAdded,
    #[serde(rename = "user_remove")]
    UserRemove,
    #[serde(rename = "user_joined")]
    UserJoined,
    #[serde(rename = "user_left")]
    UserLeft,
    #[serde(rename = "user_kicked")]
    UserKicked,
    #[serde(rename = "user_banned")]
    UserBanned,
    #[serde(rename = "channel_renamed")]
    ChannelRenamed,
    #[serde(rename = "channel_description_changed")]
    ChannelDescriptionChanged,
    #[serde(rename = "channel_icon_changed")]
    ChannelIconChanged,
    #[serde(rename = "channel_ownership_changed")]
    ChannelOwnershipChanged,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Text
    }
}

